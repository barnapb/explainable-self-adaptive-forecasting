AWSTemplateFormatVersion: '2010-09-09'
Description: '(SA0006) -  sagemaker-dashboards-for-ml:  Used as root template for
  Dashboards with ML with Amazon SageMaker Solution.  Version 1'
Parameters:
  ResourceName:
    Type: String
    Description: "Used to name resources created as part of this stack (and inside\
      \ nested stacks too).\nCan be the same as the stack name used by AWS CloudFormation,\
      \ but this field has extra\nconstraints because it's used to name resources\
      \ with restrictions (e.g. Amazon S3 bucket\nnames cannot contain capital letters).\n"
    AllowedPattern: ^[a-z0-9\-]+$
    ConstraintDescription: Only allowed to use lowercase letters, hyphens and/or numbers.
  AddDevelopmentStack:
    Type: String
    Description: "Add stack for dashboard development?\nContains Amazon SageMaker\
      \ Notebook Instance and associated Amazon S3 Bucket.\n"
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  SageMakerNotebookInstanceType:
    Description: "Choose the instance type for the Amazon SageMaker Notebook Instance.\n\
      Will only be used if the development stack was added.\n"
    Type: String
    Default: ml.c5.2xlarge
  SageMakerNotebookGitRepository:
    Description: "Choose the Git repository to clone on the Amazon SageMaker Notebook\
      \ Instance.\n"
    Type: String
  SageMakerNotebookGitUserName:
    Description: "Choose the Git user name to use for commits on the Amazon SageMaker\
      \ Notebook Instance.\n"
    Type: String
    Default: SageMaker Default User
    AllowedPattern: ^.+$
    ConstraintDescription: Must not be blank.
  SageMakerNotebookGitUserEmail:
    Description: "Choose the Git user email to use for commits on the Amazon SageMaker\
      \ Notebook Instance.\nCan be blank.\n"
    Type: String
    Default: ''
  CustomDomain:
    Type: String
    Description: "If you intend to host the deployed dashboard on a custom domain\
      \ or sub-domain (e.g. dashboard.example.com), specify that here.\nOtherwise,\
      \ leave this blank and the auto-generated Application Load Balancer DNS Name\
      \ will be used instead.\nWhen specified, this will be used in authentication\
      \ callbacks.\n"
    Default: ''
  ApplicationLoadBalancerSSLCertificate:
    Type: String
    Description: "If you intend to host the deployed dashboard on a custom domain\
      \ or sub-domain (e.g. dashboard.example.com),\nspecify the ARN of the AWS Certificate\
      \ Manager certificate that should be used by the Application Load Balancer for\
      \ HTTPS connections.\nOtherwise, leave this blank and a self-signed certificate\
      \ be used instead, but be aware that this will lead to security warnings and\
      \ should only\nbe used for development purposes (not in production).\n"
    Default: ''
  ApplicationLoadBalancerCIDRWhitelist:
    Type: String
    Description: "Specify the CIDR IP address range that is allowed to access the\
      \ dashboard (via the Application Load Balancer).\nUse http://checkip.amazonaws.com/\
      \ to find the IP address of your current machine.\nOnly use '0.0.0.0/0' if public\
      \ access is required.\n"
    Default: 0.0.0.0/0
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid CIDR IP.
  ApplicationLoadBalancerStickySessions:
    Type: String
    Description: "Use sticky sessions to route all requests in a user session to the\
      \ same dashboard server.\nCertain dashboard libraries may require this, but\
      \ Streamlit does not.\n"
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  AddCognitoAuthentication:
    Type: String
    Description: "Add Amazon Cognito authentication to dashboard?\nWith authentication\
      \ enabled, users access the dashboard with an individually assigned username\
      \ and password.\n"
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  CognitoAuthenticationSampleUserEmail:
    Type: String
    Description: "Specify an email address for the `dashboard_user` account.\nUsed\
      \ to send the temporary password for first-time dashboard access.\nA required\
      \ field if using Amazon Cognito authentication, otherwise can leave blank.\n\
      More users can be created through the Amazon Cognito Console or API.\nSee the\
      \ `CognitoUsersConsoleURL` output of this stack, for a link to the console where\
      \ new users can be added.\n"
    AllowedPattern: ^$|^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
    ConstraintDescription: Must be a valid email address.
    Default: ''
  S3BucketUser:
    Type: String
    Description: "Enter the bucket were the artefacts will be stored, as well as where\
      \ the data resides\n"
  BackendRegion:
    Type: String
    Description: "Enter the region were the backend functionality resides (SAM app)\n"
  UtilityLambdaARN:
    Type: String
    Description: "Enter the ARN of the Utility Lambda\n"
  ServeLambdaARN:
    Type: String
    Description: "Enter the ARN of the DeepAR Predict Lambda\n"
  DashboardRepositoryName:
    Type: String
    Description: "Enter the name of the repository\n"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General
      Parameters:
      - ResourceName
    - Label:
        default: Development
      Parameters:
      - AddDevelopmentStack
      - SageMakerNotebookInstanceType
      - SageMakerNotebookGitRepository
      - SageMakerNotebookGitUserName
      - SageMakerNotebookGitUserEmail
    - Label:
        default: Deployment
      Parameters:
      - CustomDomain
      - ApplicationLoadBalancerSSLCertificate
      - ApplicationLoadBalancerCIDRWhitelist
      - ApplicationLoadBalancerStickySessions
    - Label:
        default: Authentication
      Parameters:
      - AddCognitoAuthentication
      - CognitoAuthenticationSampleUserEmail
    ParameterLabels:
      ResourceName:
        default: Resource Name
      AddDevelopmentStack:
        default: Use Amazon SageMaker Notebook Instance for dashboard development?
      SageMakerNotebookInstanceType:
        default: Instance Type
      SageMakerNotebookGitRepository:
        default: Git Repository
      SageMakerNotebookGitUserName:
        default: Git User Name
      SageMakerNotebookGitUserEmail:
        default: Git User Email
      CustomDomain:
        default: Custom Domain Name
      ApplicationLoadBalancerSSLCertificate:
        default: SSL Certificate
      ApplicationLoadBalancerCIDRWhitelist:
        default: Security Group Inbound CIDR IP
      ApplicationLoadBalancerStickySessions:
        default: Use Sticky Sessions?
      AddCognitoAuthentication:
        default: Use Amazon Cognito Authentication?
      CognitoAuthenticationSampleUserEmail:
        default: Sample User Email
Conditions:
  AddDevelopmentStack:
    Fn::Equals:
    - Ref: AddDevelopmentStack
    - 'true'
  AddCognitoAuthentication:
    Fn::Equals:
    - Ref: AddCognitoAuthentication
    - 'true'
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${ResourceName}-${AWS::Region}-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W35
          reason: Avoids user having to manually create an Amazon S3 bucket for logs.
        - id: W51
          reason: Current default access policy is sufficient.
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Statement:
        - Action: s3:PutObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${S3Bucket}/logs/AWSLogs/${AWS::AccountId}/*
          Principal:
            AWS: arn:aws:iam::797873946194:root
        - Action: s3:PutObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${S3Bucket}/logs/AWSLogs/${AWS::AccountId}/*
          Principal:
            Service: delivery.logs.amazonaws.com
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
        - Action: s3:GetBucketAcl
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${S3Bucket}
          Principal:
            Service: delivery.logs.amazonaws.com
  DevelopmentStack:
    Type: AWS::CloudFormation::Stack
    Condition: AddDevelopmentStack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/easf-dashboard-prod-20210125/dashboard/build/229c3ef5cc4b4635f76bfcfc700ed2e2.template
      Parameters:
        ResourceName:
          Ref: ResourceName
        SageMakerNotebookInstanceType:
          Ref: SageMakerNotebookInstanceType
        SageMakerNotebookGitRepository:
          Ref: SageMakerNotebookGitRepository
        SageMakerNotebookGitUserName:
          Ref: SageMakerNotebookGitUserName
        SageMakerNotebookGitUserEmail:
          Ref: SageMakerNotebookGitUserEmail
        SageMakerModel:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.SageMakerModel
        ECRRepository:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.ECRRepository
        ECSCluster:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.ECSCluster
        ECSService:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.ECSService
        DashboardURL:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.DashboardURL
        ApplicationLoadBalancer:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.ApplicationLoadBalancer
        AddCognitoAuthentication:
          Ref: AddCognitoAuthentication
        S3Bucket:
          Ref: S3Bucket
  DeploymentStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/easf-dashboard-prod-20210125/dashboard/build/653111d9e4e4c511cfae7cfd9a2bde8f.template
      Parameters:
        ResourceName:
          Ref: ResourceName
        CustomDomain:
          Ref: CustomDomain
        ApplicationLoadBalancerSSLCertificate:
          Ref: ApplicationLoadBalancerSSLCertificate
        ApplicationLoadBalancerCIDRWhitelist:
          Ref: ApplicationLoadBalancerCIDRWhitelist
        ApplicationLoadBalancerStickySessions:
          Ref: ApplicationLoadBalancerStickySessions
        AddCognitoAuthentication:
          Ref: AddCognitoAuthentication
        CognitoAuthenticationSampleUserEmail:
          Ref: CognitoAuthenticationSampleUserEmail
        SageMakerModel:
          Ref: ResourceName
        S3Bucket:
          Ref: S3Bucket
        S3BucketUser:
          Ref: S3BucketUser
        BackendRegion:
          Ref: BackendRegion
        UtilityLambdaARN:
          Ref: UtilityLambdaARN
        ServeLambdaARN:
          Ref: ServeLambdaARN
        DashboardRepositoryName:
          Ref: DashboardRepositoryName
  SolutionAssistant:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/easf-dashboard-prod-20210125/dashboard/build/46b8604034561a3595995a4bc11b171a.template
      Parameters:
        ResourceName:
          Ref: ResourceName
        ECRRepository:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.ECRRepository
        SageMakerModel:
          Fn::GetAtt:
          - DeploymentStack
          - Outputs.SageMakerModel
        AddDevelopmentStack:
          Ref: AddDevelopmentStack
  S3BucketAssistant:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/easf-dashboard-prod-20210125/dashboard/build/2fb1455e9ecbeb6bbf4216d2ffdc177b.template
      Parameters:
        ResourceName:
          Ref: ResourceName
        S3Bucket:
          Ref: S3Bucket
Outputs:
  SageMakerNotebookInstanceURL:
    Condition: AddDevelopmentStack
    Description: "URL of Amazon SageMaker Notebook Instance for dashboard development.\n\
      Will open in Jupyter tree view, showing all project files in the Git repository.\n"
    Value:
      Fn::GetAtt:
      - DevelopmentStack
      - Outputs.SageMakerNotebookInstanceURL
  DashboardURL:
    Description: "URL of dashboard.\nWill show 'Server Error' until the dashboard\
      \ container is pushed to Amazon ECR and the Amazon ECS service is started.\n"
    Value:
      Fn::GetAtt:
      - DeploymentStack
      - Outputs.DashboardURL
  ApplicationLoadBalancerURL:
    Description: "URL of the Application Load Balancer.\nWhen `CustomDomain` was specified,\
      \ you should add a CNAME record on the custom domain (or sub-domain) that points\
      \ to this URL.\n"
    Value:
      Fn::GetAtt:
      - DeploymentStack
      - Outputs.ApplicationLoadBalancer
  CognitoUsersConsoleURL:
    Condition: AddCognitoAuthentication
    Description: "URL of the Amazon Cognito Console page for managing dashboard users\
      \ (e.g. adding new users).\n"
    Value:
      Fn::GetAtt:
      - DeploymentStack
      - Outputs.CognitoUsersConsoleURL
